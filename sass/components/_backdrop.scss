.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  // padding-top: 10px;
  background-color: rgba(0, 0, 0, 0.2);
  transition: opacity 300ms linear, visibility 300ms linear;
  overflow-y: scroll;
}
.is-hidden {
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}
.modal {
  position: relative;
  margin-top: 10px;
  margin-left: auto;
  margin-right: auto;
  width: 90%;
  min-height: 609px;
  padding-top: 30px;
  padding-bottom: 30px;
  padding-left: 15px;
  padding-right: 15px;

  background-color: var(--primary-color);
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),
    0px 2px 1px rgba(0, 0, 0, 0.2);
  border-radius: 4px;

  @media screen and (min-width: 480px) {
    position: absolute;
    top: 50%;
    left: 50%;
    // transform: translate(-50%, -50%);
    width: 450px;
    min-height: 609px;
    padding-left: 40px;
    padding-right: 40px;
    padding-top: 40px;
    padding-bottom: 40px;
    transform: translate(-50%, -50%) scaleY(1);
  }
  @media screen and (min-width: 768px) {
  }
  @media screen and (min-width: 1200px) {
    width: 528px;
    height: 581px;
  }
}
.modal-title {
  font-weight: 700;
  font-size: 20px;

  margin-bottom: 12px;
  line-height: 1.5;
  text-align: center;
  letter-spacing: 0.03em;

  color: var(--title-text-color);
  @media screen and (min-width: 480px) {
  }
  @media screen and (min-width: 768px) {
  }
  @media screen and (min-width: 1200px) {
    line-height: 1.15;
  }
}
.modal-fild {
  &:not(:last-child) {
    margin-bottom: 10px;
  }
  &:nth-child(4) {
    margin-bottom: 0;
  }
}

.input-wrap {
  position: relative;
}
.modal-input {
  display: block;
  margin-top: 4px;
  width: 100%;
  height: 40px;
  border: 1px solid var(--color-input);
  border-radius: 4px;
  font-size: 14px;
  outline: transparent;
  padding-left: 40px;
  cursor: pointer;
  &:focus {
    border-color: var(--accent-text-color);
    cursor: pointer;
  }
}

.input-icon {
  position: absolute;
  left: 12px;
  top: 50%;
  transform: translateY(-50%);
  fill: var(--title-text-color);
  .modal-input:focus + & {
    fill: var(--accent-text-color);
  }
}
.modal-input.text {
  height: 120px;
  padding-left: 16px;
  padding-top: 12px;
  resize: none;
  &::placeholder {
    color: rgba(117, 117, 117, 0.5);
  }
}

.check-text {
  /* margin-top: 20px; */
  font-size: 12px;
  line-height: 1.17;
  letter-spacing: 0.03em;
  color: var(--primary-text-color);
  display: flex;
  cursor: pointer;

  align-items: flex-start;
  @media screen and (min-width: 480px) {
    align-items: center;
  }
  @media screen and (min-width: 768px) {
  }
  @media screen and (min-width: 1200px) {
    font-size: 14px;
    line-height: 1.7;
  }
}
.wrap-check {
  display: flex;
  flex-direction: column;
  @media screen and (min-width: 480px) {
    display: block;
  }
}
.wrap-check a {
  padding-top: 5px;
}
.check-text span {
  width: 16px;
  height: 15px;
  border: 2px solid var(--title-text-color);
  border-radius: 3px;
  margin-right: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  fill: transparent;
  .input-check:checked + & {
    background-color: var(--accent-text-color);
    fill: var(--primary-color);
    border: transparent;
  }
}
.input-check {
  display: block;
  margin-top: 20px;
  appearance: none;
}

.check-text a {
  text-decoration: underline;
  color: var(--accent-text-color);
  margin-left: 4px;
  text-decoration-skip-ink: none;
}

.btn-modal {
  display: block;
  padding: 10px 52px;

  margin-top: 30px;
  margin-left: auto;
  margin-right: auto;
}

.backdrop.is-hidden .modal {
  transform: translate(-50%, 0%) scale(0);
  transition: transform 300ms linear;
}
.button-x {
  position: absolute;
  top: 8px;
  right: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent;
  border-radius: 50%;
  border: 1px solid var(--social-networks-icon);
  width: 30px;
  height: 30px;
  color: var(--title-text-color);
  &:hover {
    color: var(--accent-text-color);
    cursor: pointer;
  }
}
.button-img {
  fill: currentColor;
}
